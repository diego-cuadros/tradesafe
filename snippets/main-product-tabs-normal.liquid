<link rel="stylesheet" href="{{ 'component-tabs.css' | asset_url }}" media="print" onload="this.media='all'">
<noscript>{{ 'component-tabs.css' | asset_url | stylesheet_tag }}</noscript>
{%- liquid
  assign active_tab_label_selector = ''
  assign focus_tab_label_selector = ''
  assign active_tab_content_selector = ''
  assign available_tab_ids = ''
  assign has_first_tab = false
  assign has_specification_tabs = false
-%}

{%- for block in section.blocks -%}
  {%- liquid
    if block.type == 'description_icon'
      continue
    endif
    assign available_tab = true
    if block.type != 'description' and request.design_mode == false
      case block.type
        when 'custom_text'
          if block.settings.custom_text == blank
            assign available_tab = false
          endif
        when 'page_content' 
          if block.settings.page == blank
            assign available_tab = false
          endif
        when 'custom_liquid'
          if block.settings.custom_liquid_code == blank
            assign available_tab = false
          endif  
        when 'specifications'
          if block.settings.metafields == blank
            assign available_tab = false
          else
            assign has_specification_tabs = true  
          endif  
        else
          if block.settings.namespace_key == blank
            assign available_tab = false
          else
            assign metafield_parts = block.settings.namespace_key | split: '.'
            if product.metafields[metafield_parts[0]][metafield_parts[1]] == blank
              assign available_tab = false
            endif
          endif  
      endcase
    endif
  -%}
  {%- if available_tab -%}
    {%- liquid
      assign suffix = section.id | append: '-' | append: block.id
      assign active_tab_label_selector = active_tab_label_selector | append: '#tab-item-input-' | append: suffix | append: ':checked ~ .tabs__content .tabs__title-list label[for="tab-item-input-' | append: suffix | append: '"],'
      assign focus_tab_label_selector = focus_tab_label_selector | append: '#tab-item-input-' | append: suffix | append: ':focus-visible ~ .tabs__content .tabs__title-list label[for="tab-item-input-' | append: suffix | append: '"],'
      assign active_tab_content_selector = active_tab_content_selector | append: '#tab-item-input-' | append: suffix | append: ':checked ~ .tabs__content .tabs__content-list .tabs__tab-content--' | append: suffix | append: ','
      assign available_tab_ids = available_tab_ids | append: block.id | append: ','
    -%}
    <input type="radio" name="tab-item-input-{{ section.id }}" class="tabs__item-input visually-hidden small-hide" id="tab-item-input-{{ suffix }}"{% unless has_first_tab %} checked{% endunless %}>
    {%- assign has_first_tab = true -%}
  {%- endif -%}
{%- endfor -%}
{%- assign available_tab_ids = available_tab_ids | split: ',' | compact -%}
<div class="tabs__content">
  <div class="tabs__title-list-wrapper flex">
    <div class="tabs__title-list tabs__title-list--{{ section.id }}">
      <ul class="margin0 list-unstyled tabs__title-list__content--{{ section.id }}">
        {%- for block in section.blocks -%}
          {%- if available_tab_ids contains block.id -%}
            {%- assign suffix = section.id | append: '-' | append: block.id -%}
            <li>
              <label for="tab-item-input-{{ suffix }}" class="tabs__item-label font-heading-bold light por db h4" {{ block.shopify_attributes }}>{{ block.settings.title }}</label>
            </li>
          {%- endif -%}
        {%- endfor -%}
      </ul>
    </div>
  </div>
  <div class="tabs__content-list tabs__content-list--{{ section.id }} element-small-margin-top">
    {%- for block in section.blocks -%}
      {%- if available_tab_ids contains block.id -%}
        {%- assign suffix = section.id | append: '-' | append: block.id -%}
        <div class="tabs__tab-content--{{ section.id }} tabs__tab-content--{{ suffix }} w100" data-suffix="{{ suffix }}">
          {%- case block.type -%}
            {%- when 'description' -%}
              {%- if product.description != blank -%}
                {%-liquid
                  render 'main-product-description', product: product, section: section, block: block, no_shopify_attributes: true
                  assign icons = section.blocks | where: "type", "description_icon"
                -%}
                {%- if icons.size > 0 -%}
                  <div class="element-small-margin-top">
                    <div class="grid grid--2-col">
                      {%- for icon in icons -%}
                        <div class="grid__item flex align-center product__description-icon-{{ section.id }}" {{ icon.shopify_attributes }}>
                          {%- render 'icon-picker' with icon: icon.settings.icon -%}
                          {%- if icon.settings.title != blank -%}
                            <span>{{ icon.settings.title }}</span>
                          {%- endif -%}  
                        </div>
                      {%- endfor -%}  
                    </div>
                  </div>
                {%- endif -%}  
              {%- endif -%}
            {%- when 'custom_text' -%}
              {%- if block.settings.custom_text != blank -%}  
                <div class="rich-text__text rte">
                  {{ block.settings.custom_text }}
                </div>
              {%- endif -%}
            {%- when 'custom_liquid' -%}
              {%-liquid
                if block.settings.custom_liquid_code != blank
                  echo block.settings.custom_liquid_code
                endif
              -%}
            {%- when 'page_content' -%}
              {%- if block.settings.page != blank -%}
                {{ block.settings.page.content }}  
              {%- endif -%}
            {%- when 'metafields' -%}
              {%- if block.settings.namespace_key != blank -%}
                {%- assign metafield_parts = block.settings.namespace_key | split: '.' -%}
                {%- if product.metafields[metafield_parts[0]][metafield_parts[1]] != blank -%}
                  {{ product.metafields[metafield_parts[0]][metafield_parts[1]] | metafield_tag }}
                {%- endif -%}  
              {%- endif -%}  
            {%- when 'specifications' -%}
              {%- if block.settings.metafields != blank -%}
                {%- assign metafields_array = block.settings.metafields
                  | newline_to_br
                  | replace: '<br />', ','
                  | split: ','
                -%}
                {%- if metafields_array.size > 0 -%}
                  <div class="rte tabs__tab-content__specifications">
                    <table>
                      <tbody>
                        {%- for field in metafields_array -%}
                          {%- liquid
                            assign splits = field | split: ':'
                            if splits.size == 1
                              assign pair = field | replace: ' ', '' | split: '.'
                            else
                              assign pair = splits[1] | replace: ' ', '' | split: '.'
                            endif
                          -%}
                          {%- if pair.size >= 2 -%}
                            {%- liquid
                              assign namespace = pair[0] | strip
                              assign key = pair[1] | strip
                              if splits.size == 1
                                assign item_label = key | replace: '_', ' ' | capitalize
                              else
                                assign item_label = splits[0] | strip
                              endif
                            -%}
                          {%- endif -%}
                          {%- if product.metafields[namespace][key] -%}
                            <tr>
                              <th class="tabs__tab-content__specification-item-heading-{{ section.id }} left">{{ item_label | replace: '_', ' ' }}</th>
                              <td>
                                {%- unless product.metafields[namespace][key].type == 'boolean' -%}
                                  {%- unless product.metafields[namespace][key].type contains 'list.'
                                    and product.metafields[namespace][key].type != 'list.single_line_text_field'
                                  -%}
                                    {% unless product.metafields[namespace][key].type contains 'metaobject_reference' %}
                                      {{ product.metafields[namespace][key] | metafield_tag }}
                                    {% else %}
                                      {{ product.metafields[namespace][key].value[pair[2]] }}
                                    {% endunless %}
                                  {%- else -%}
                                    <ul>
                                      {%- for field in product.metafields[namespace][key].value -%}
                                        <li>
                                          {%- if product.metafields[namespace][key].type contains 'product_reference'
                                            or product.metafields[namespace][key].type contains 'variant_reference'
                                          -%}
                                            <a href="{{ field.url }}">{{ field.title }}</a>
                                          {%- elsif product.metafields[namespace][key].type
                                              contains 'metaobject_reference'
                                          -%}
                                            {{ field[pair[2]] }}
                                          {%- else -%}
                                            {{ field }}
                                          {%- endif -%}
                                        </li>
                                      {%- endfor -%}
                                    </ul>
                                  {%- endunless -%}
                                {%- else -%}
                                  {%- if product.metafields[namespace][key].value == true -%}
                                    {{ 'general.boolean.true' | t }}
                                  {%- else -%}
                                    {{ 'general.boolean.false' | t }}
                                  {%- endif -%}
                                {%- endunless -%}
                              </td>
                            </tr>
                          {%- endif -%}
                        {%- endfor -%}
                      </tbody>
                    </table>
                  </div>
                {%- endif -%}
              {%- endif -%}  
          {%- endcase -%}  
        </div>
      {%- endif -%}
    {%- endfor -%}
  </div>
</div>
{%- style -%}
  {%- if has_first_tab -%}
    .tabs__title-list--{{ section.id }} {
      overflow: auto;
    }
    .tabs__title-list--{{ section.id }} li:first-child {
      margin-inline-start: 0.5rem;
    }
    .tabs__title-list--{{ section.id }} li:last-child {
      margin-inline-end: 0.5rem;
    }
    .tabs__title-list--{{ section.id }} .tabs__item-label {
      padding: 2rem 0;
    }
    .tabs__title-list__content--{{ section.id }} {
      display: inline-grid;
      grid-auto-flow: column;
      grid-auto-columns: max-content;
      column-gap: 2.5rem;
    }
    .tabs__tab-content--{{ section.id }} {
      display: none;
    }
    {%- if icons -%}
      .product__description-icon-{{ section.id }} {
        gap: 1.5rem;
      }
    {%- endif -%}  
    {{ active_tab_label_selector | split: ',' | compact | join: ',' }} {
      opacity: 1;
      border-bottom: 0.1rem solid rgb(var(--color-foreground));
    }
    {{ focus_tab_label_selector | split: ',' | compact | join: ',' }} {
      outline: 0.1rem solid rgba(var(--color-foreground), 1);
      outline-offset: -0.1rem;
    }
    {{ active_tab_content_selector | split: ',' | compact | join: ',' }} {
      display: block;
      height: auto;
    }
    {%- if has_specification_tabs -%}
      .tabs__tab-content__specification-item-heading-{{ section.id }} {
        width: 20rem;
      }
    {%- endif -%}
  {%- endif -%}
{%- endstyle -%}